{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let NavigatorService = /*#__PURE__*/(() => {\n  class NavigatorService {\n    constructor() {\n      this._routes = new BehaviorSubject([]);\n      this._childRoutes = new BehaviorSubject([]);\n    }\n\n    get routes() {\n      return this._routes.asObservable();\n    }\n\n    get childRoutes() {\n      return this._childRoutes.asObservable();\n    }\n\n    init(navModel) {\n      this._routes.next(navModel);\n    }\n\n    setSideNav(sideNav) {\n      this._sideNav = sideNav;\n    }\n\n    setChildRoutes(childRoutes) {\n      this._childRoutes.next(childRoutes);\n    }\n    /**\r\n     * Mat Side Nav Exposed APIs\r\n     */\n\n\n    open() {\n      this._sideNav.open();\n    }\n\n    close() {\n      this._sideNav.close();\n    }\n\n  }\n\n  NavigatorService.ɵfac = function NavigatorService_Factory(t) {\n    return new (t || NavigatorService)();\n  };\n\n  NavigatorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NavigatorService,\n    factory: NavigatorService.ɵfac,\n    providedIn: 'root'\n  });\n  return NavigatorService;\n})();","map":null,"metadata":{},"sourceType":"module"}